data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data <- loadData(file = "~/Desktop/research/extern/Datasets/GEM-GECO/data3/residuals3.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f@frequency
imshow(x = f@wavenumber, y = f@frequency[-1], z = t(f@data)[, -1], component = "intensity")
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
source('~/Desktop/OscillationsApp/src.R')
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
data <- loadDatA()
data <- loadData()
imshow(z = t(data@data))
imshow(x = data@wavenumber, y = data@time, z = t(data@data))
data2 <- trimData(data, uniform = TRUE)
imshow(x = data2@wavenumber, y = data2@time, z = t(data2@data))
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data))
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
abline(v = 1265)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
abline(v = 1265)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = tail(f@wavenumber, 500), y = f@frequency, z = tail(t(f@data), 500), component = "intensity")
imshow(x = tail(f@wavenumber, 400), y = f@frequency, z = tail(t(f@data), 400), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = tail(f@wavenumber, 400), y = f@frequency, z = tail(t(f@data), 400), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
shiny::runApp('Desktop/OscillationsApp')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency[-1], z = t(f@data)[, -1], component = "intensity")
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency[-1], z = t(f@data)[, -1], component = "intensity")
abline(v = 1560)
abline(v = 1560)
imshow(x = f@wavenumber, y = f@frequency[-1], z = t(f@data)[, -1], component = "intensity")
imshow(x = f@wavenumber, y = f@frequency[c(-1, -2)], z = t(f@data)[, c(-1, -2)], component = "intensity")
data <- loadData()
shiny::runApp('Desktop/OscillationsApp')
source('~/Desktop/OscillationsApp/src.R')
runApp('Desktop/OscillationsApp')
source('~/Desktop/OscillationsApp/src.R')
runApp('Desktop/OscillationsApp')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
imshow(z = t(data@data))
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
which.min(abs(1570 - data@wavenumber))
plot(l@frequency, l@data[864, ])
plot(l@frequency, l@data[, ])
dim(l@data)
l@frequency
length(l@frequency)
plot(l@frequency, l@data[, 864])
plot(l@frequency, l@data[, 864], type = "l")
l@frequency
f@frequency
plot(f@frequency, f@data[, 864], type = "l")
plot(f@frequency, abs(f@data[, 864])^2, type = "l")
plot(f@frequency, f@data[, 864], type = "l")
plot(f@frequency, abs(f@data[, 864]), type = "l")
plot(f@frequency, f@data[, 864], type = "l")
plot(f@frequency, f@data[, 864]^2, type = "l")
imshow(x = l@wavenumber, y = l@frequency, z = Re(t(l@data)))
imshow(x = l@wavenumber, y = l@frequency, z = Re(t(l@data))^2)
plot(f@frequency, f@data[, 864], type = "l")
plot(f@frequency, Im(f@data[, 864]), type = "l")
plot(f@frequency, Re(f@data[, 864]), type = "l")
plot(f@frequency, Re(f@data[, 864]), type = "l")
plot(f@frequency, Im(f@data[, 864]), type = "l")
plot(f@frequency, abs(f@data[, 864]), type = "l")
plot(f@frequency, abs(f@data[, 864])^2, type = "l")
plot(f@frequency, abs(f@data[, 865])^2, type = "l")
plot(f@frequency, abs(f@data[, 866])^2, type = "l")
plot(f@frequency, abs(f@data[, 867])^2, type = "l")
plot(f@frequency, abs(f@data[, 868])^2, type = "l")
plot(f@frequency, abs(f@data[, 869])^2, type = "l")
plot(f@frequency, abs(f@data[, 870])^2, type = "l")
plot(f@frequency, abs(f@data[, 871])^2, type = "l")
plot(f@frequency, abs(f@data[, 872])^2, type = "l")
plot(f@frequency, abs(f@data[, 873])^2, type = "l")
plot(f@frequency, abs(f@data[, 874])^2, type = "l")
plot(f@frequency, abs(f@data[, 875])^2, type = "l")
f <- dft(data2, window = "hamming")
plot(f@frequency, abs(f@data[, 865])^2, type = "l")
plot(f@frequency, abs(f@data[, 865])^2, type = "l")
f <- dft(data2, window = "hamming")
plot(f@frequency, abs(f@data[, 875])^2, type = "l")
plot(f@frequency, abs(f@data[, 874])^2, type = "l")
plot(f@frequency, abs(f@data[, 872])^2, type = "l")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data@time
data2 <- trimData(data, end.time = 2)
data2@wavenumber
data2@time
l <- lomb(data2)
source('~/Desktop/OscillationsApp/src.R')
source('~/Desktop/OscillationsApp/src.R')
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
data2 <- trimData(data, remove.negative = FALSE, start.time = -0.2, end.time = 2)
data2@time
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
l <- lomb(data)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
l <- lomb(data)
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
data2 <- trimData(data, remove.negative = FALSE, start.time = -0.2, end.time = 5)
l <- lomb(data2, to = 200)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
data3 <- trimData(data, remove.negative = FALSE, start.time = -0.2, uniform = TRUE)
f <- dft(data3)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data3, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data3 <- trimData(data, uniform = TRUE)
f <- dft(data3, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency[-1], z = t(f@data)[, -1], component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
data <- loadData()
data2 <- trimData(data)
l <- lomb(data2)
l@frequency
data2 <- trimData(data, uniform = TRUE)
l <- lomb(data2)
l@frequency
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data))
sum(l@data[1, ])
l@data[1, ]
sum(l@data[, 1])
sum(l@data[, 2])
sum(l@data[, 5])
sum(l@data[, 100])
sum(l@data[, 200])
sum(l@data[, 1000])
sum(l@data[, 500])
??welch
data2@time
data <- loadData()
data2 <- trimData(uniform = TRUE)
data2 <- trimData(data, uniform = TRUE)
data2@time
length(data2@time)
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
l <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
l <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency[c(-1, -2, -3)], z = t(f@data)[, c(-1, -2, -3)], component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data@time
data3 <- trimData(data, end.time = 2)
l <- lomb(data3)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
?lsp
clear(list = ls())
rm(list = ls())
source('~/Desktop/research/extern/Misc/functions.r')
importData()
baselineGUI(data)
baselineGUI(data)
baselineGUI(spectra)
exportData(file = "~/Desktop/research/extern/Datasets/GEM-GECO/data3/subg_nobase4.txt")
saveBaselinePlots(file = "~/Desktop/research/extern/Datasets/GEM-GECO/data3/baselines4.pdf")
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = f@data)
imshow(x = f@wavenumber, y = f@frequency, z = f@data, component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data2@wavenumber <- data2@wavenumber[length(data2@wavenumber)/2:length(data2@wavenumber)]
dim(data2@data)
data2@data <- data2@data[, length(data2@wavenumber):lenght(data2@data)]
data2@data <- data2@data[, length(data2@wavenumber):length(data2@data)]
length(data2@wavenumber)
data2@wavenumber <- data2@wavenumber[(length(data2@wavenumber)/2):length(data2@wavenumber)]
length(data2@wavenumber)
data2@data <- data2@data[, length(data2@wavenumber):length(data2@data)]
dim(data2@data)
data2@data <- data2@data[length(data2@wavenumber):length(data2@data)]
data2@data <- data2@data[length(data2@wavenumber):length(data2@data), ]
data2@data <- data2@data[, length(data2@wavenumber):dim(data2@data)[2]]
dim(data2@data)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f@wavenumber
f@frequency
data2@wavenumber <- data@wavenumber[(length(data@wavenumber)/2):length(data@wavenumber)]
data2@wavenumber
length(data2@wavenumber)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f@wavenumber <- data2@wavenumber
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data, window = "hamming")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2)
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
rm(list = ls())
install("bio3d")
install.packages("bio3d")
library("maps", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:maps", unload=TRUE)
library("maps", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:maps", unload=TRUE)
library("bio3d")
remove.packages("gWidgets", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("IgorR", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("V8", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("cowplot", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("curl", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("fields", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("gridExtra", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("httr", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("js", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("jsonlite", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("raster", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("RJSONIO", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("viridisLite", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("viridis", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("uuid", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages(c("pbdZMQ", "plotly", "R6", "shiny", "stringi"))
remove.packages("httpuv", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
pdb <- read.pdb("Desktop/rex/4I2Y.pdb")
modes <- nma(pdb)
print(modes)
pymol(modes, mode=7)
?pymol.modes
pymol.modes(modes, mode=7, type="launch")
mktrj(modes, mode=7)
mktrj.nma(modes)
mktrj.nma(modes, pdb = pdb)
?mktrj.nma
installed.packages(TIMP)
installed.packages("TIMP")
install.packages("TIMP")
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
imshow(x = f@wavenumber, y=f@frequency, z=f@data, component = "intensity")
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png(filename = "Bi-W-oscillations.png",pointsize = 900)
png(filename = "Bi-W-oscillations.png",pointsize = 900)
?png
dev.off()
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png(res = 900)
png("test.png", res = 900)
dev.off()
png("test.png", res = 900)
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png("test.png", res = 900, width = 6, height = 4, units = 'cm')
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png("test.png", res = 900, width = 6, height = 4, units = 'in')
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.off()
par(mar=(0.5, 0.5))
par(mar=c(0.5, 0.5))
par(mar=rep(0.5, 4))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
par(mar=rep(1, 4))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
par(mar=rep(2, 4))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
par(mar=rep(3, 4))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png("test.png", res = 900, width = 6, height = 4, units = 'in')
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.of()
dev.off()
png("test.png", res = 900, width = 6, units = 'in')
png("test.png", res = 900, width = 5, units = 'in')
png("test.png", res = 600, width = 6, units = 'in')
dev.off()
png("test.png", res = 600, width = 6, units = 'in')
png("test.png", res = 600)
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
png("myplot.png", width=4, height=4, units="in", res=300)
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.off()
png("myplot.png", width=4, height=4, units="in", res=300)
par(mar=c(0.5, 0.5, 0.5, 0.5))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.off()
par(mar=c(2, 2, 2, 2))
png("myplot.png", width=4, height=4, units="in", res=300)
par(mar=c(2, 2, 2, 2))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.off()
par(mar=c(3, 3, 3, 3))
png("myplot.png", width=4, height=4, units="in", res=300)
png("myplot.png", width=5, height=4, units="in", res=300)
par(mar=c(3, 3, 3, 3))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
dev.off()
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
xlab("Wavelenght (nm)")
library("latex2exp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
title(main="Bi-W Osillations", xlab="wavelength (nm)", ylab=TeX("oscillation frequency (cm^{-1})"))
par(res=500)
title(main="Bi-W Oscillations", xlab="wavelength (nm)", ylab=TeX("oscillation frequency (cm^{-1})"))
imshow(x = f@wavenumber, y=f@frequency, z=t(f@data), component = "intensity")
title(main="Bi-W Oscillations", xlab="wavelength (nm)", ylab=TeX("oscillation frequency (cm^{-1})"))
d <- as.data.frame(f)
source('~/Desktop/OscillationsApp/src.R')
d <- as.data.frame(f)
rm(list = ls())
data <- loadData()
source('~/Desktop/OscillationsApp/src.R')
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
d <- as.data.frame(f)
debugSource('~/Desktop/OscillationsApp/src.R')
d <- as.data.frame(f)
d <- as.data.frame(f)
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
d <- as.data.frame(f)
d <- as.data.frame(f)
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
debugSource('~/Desktop/OscillationsApp/src.R')
d <- as.data.frame(f)
write.csv(d)
write.csv(d, file = "Bi-W-oscillation.csv")
rm(list = ls())
debugSource('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
f <- dft(data, window = "hamming")
df <- as.data.frame(f)
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/ipython/Bi-W/oscillation3.csv")
data <- loadData("~/Desktop/research/extern/Datasets/Bi-W/t4/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/ipython/Bi-W/oscillation4.csv")
data <- loadData("~/Desktop/research/extern/Datasets/Bi-W/t5/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/ipython/Bi-W/oscillation5.csv")
data <- loadData("~/Desktop/research/extern/Datasets/Bi-W/t6/residuals.csv")
data <- loadData("~/Desktop/research/extern/Datasets/Bi-W/t6/residuals.csv")
data <- loadData("~/Desktop/research/extern/Datasets/Bi-W/t5/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/ipython/Bi-W/oscillation5.csv")
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data2 <- trimData(data, uniform = FALSE)
l <- lomb(data2)
data2 <- trimData(data, end.time = 6)
l <- lomb(data2)
data2 <- trimData(data, end.time = 6)
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data))
l <- lomb(data2, to = 300)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data))
rm(list = ls())
source('~/Desktop/research/extern/Misc/functions.r')
importDatA()
importData()
baselineGUI(spectra)
install.packages("gWidgets")
baselineGUI(spectra)
exportData()
exportData()
importData()
baselineGUI(spectra)
exportData()
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@wavenumber, z = t(f@data))
imshow(x = f@wavenumber, y = f@wavenumber, z = t(f@data), component = "intensity")
imshow(x = f@wavenumber, y = f@wavenumber, z = f@data, component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
saveBaselinePlots()
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
l <- lomb(data2)
library("lomb", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
l <- lomb(data2)
imshow(x = l@wavenumber, y = l@frequency, z = t(l@data), component = "intensity")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
data3 <- trimData(data2, start.time = 0.25)
f <- dft(data3, window = "hamming")
data3@is.uniform <- TRUE
f <- dft(data3, window = "hamming")
f <- dft(data3, window = "hamming")
f <- dft(data3, window = "hamming")
source('~/Desktop/OscillationsApp/src.R')
f <- dft(data3, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
rm(list = ls())
source('~/Desktop/OscillationsApp/src.R')
data <- loadData()
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
df <- as.data.frame(f)
write.csv(df)
write.csv(df, file = "~/Desktop/research/extern/Datasets/P377R/t1/noca/fft.csv")
data <- loadData(file = "~/Desktop/research/extern/Datasets/P377R/t1/ca/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/extern/Datasets/P377R/t1/ca/fft.csv")
data <- loadData(file = "~/Desktop/research/extern/Datasets/P377R/t2/noca/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/extern/Datasets/P377R/t2/noca/fft.csv")
data <- loadData(file = "~/Desktop/research/extern/Datasets/P377R/t2/ca/residuals.csv")
data2 <- trimData(data, uniform = TRUE)
f <- dft(data2, window = "hamming")
imshow(x = f@wavenumber, y = f@frequency, z = t(f@data), component = "intensity")
df <- as.data.frame(f)
write.csv(df, file = "~/Desktop/research/extern/Datasets/P377R/t2/ca/fft.csv")
source('~/Desktop/OscillationsApp/src.R')
shiny::runApp('Desktop/OscillationsApp')
package.skeleton()
?package.skeleton
setwd("~/Desktop/OscillationsApp")
package.skeleton(name = "OscillationsApp", code_files = c("src.R", "server.R", "ui.R"))
package.skeleton(name = "OscillationsApp", code_files = c("src.R"))
